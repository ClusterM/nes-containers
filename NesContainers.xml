<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NesContainers</name>
    </assembly>
    <members>
        <member name="T:com.clusterrr.Famicom.Containers.Crc32">
            <summary>
            CRC32 calculator
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo">
            <summary>
            Disk info FDS block (block type 1)
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskSides">
            <summary>
            Disk side
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskSides.A">
            <summary>
            Side A
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskSides.B">
            <summary>
            Side B
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskTypes">
            <summary>
            Disk type (FMC)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskTypes.FMS">
            <summary>
            Normal/other
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskTypes.FSC">
            <summary>
            FMC blue-disk releases
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Country.Japan">
            <summary>
            Japan
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company">
            <summary>
            Company name, source: https://www.nesdev.org/wiki/Licensee_codes
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Nintendo">
            <summary>
            Nintendo
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.NomuraSecurities">
            <summary>
            Nomura Securities? (unverified)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Capcom">
            <summary>
            Capcom
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.HotB">
            <summary>
            Hot-B
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Jaleco">
            <summary>
            Jaleco
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.CoconutsJapanEntertainment">
            <summary>
            Coconuts Japan Entertainment
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.ElectronicArtsJap">
            <summary>
            Electronic Arts (Japan)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.HudsonSoft">
            <summary>
            Hudson Soft
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.TokaiEngineering">
            <summary>
            Tokai Engineering
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.KemcoJap">
            <summary>
            Kemco (Japan)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.SetaJap">
            <summary>
            SETA (Japan)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Tamtex">
            <summary>
            Tamtex
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.HectorPlayingInterface">
            <summary>
            Hector Playing Interface (Hect)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Loriciel">
            <summary>
            Loriciel
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Gremlin">
            <summary>
            Gremlin
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.SeikaCorporation">
            <summary>
            Seika Corporation
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Ubisoft">
            <summary>
            Ubisoft
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.System3">
            <summary>
            System 3
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Irem">
            <summary>
            Irem
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Gakken">
            <summary>
            Gakken
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Absolute">
            <summary>
            Absolute
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.AcclaimNA">
            <summary>
            Acclaim (NA)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Activision">
            <summary>
            Activision
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.AmericanSammy">
            <summary>
            American Sammy
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Gametek">
            <summary>
            GameTek
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.HITechExpressions">
            <summary>
            Hi Tech Expressions
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Ljn">
            <summary>
            LJN
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.MatchboxToys">
            <summary>
            Matchbox Toys
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Mattel">
            <summary>
            Mattel
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.MiltonBradley">
            <summary>
            Milton Bradley
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.MindscapeSoftwareToolworks">
            <summary>
            Mindscape / Software Toolworks
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.SetaNA">
            <summary>
            SETA (NA)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Taxan">
            <summary>
            Taxan
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Tradewest">
            <summary>
            Tradewest
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.IntvCorporation">
            <summary>
            INTV Corporation
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Titus">
            <summary>
            Titus
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.VirginGames">
            <summary>
            Virgin Games
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Ocean">
            <summary>
            Ocean
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.ElectronicArtsNA">
            <summary>
            Electronic Arts (NA)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.BeamSoftware">
            <summary>
            Beam Software
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.EliteSystems">
            <summary>
            Elite Systems
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.ElectroBrain">
            <summary>
            Electro Brain
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Infogrames">
            <summary>
            Infogrames
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Jvc">
            <summary>
            JVC
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.ParkerBrothers">
            <summary>
            Parker Brothers
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.TheSalesCurveSci">
            <summary>
            The Sales Curve / SCi
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Thq">
            <summary>
            THQ
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Accolade">
            <summary>
            Accolade
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Triffix">
            <summary>
            Triffix
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.MicroproseSoftware">
            <summary>
            Microprose Software
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.KemcoNA">
            <summary>
            Kemco (NA)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.MisawaEntertainment">
            <summary>
            Misawa Entertainment
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.GAmusementsCO">
            <summary>
            G. Amusements Co.
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.GO1">
            <summary>
            G.O 1
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.TokumaShotenIntermedia">
            <summary>
            Tokuma Shoten Intermedia
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.NihonMaicomKaihatsu">
            <summary>
            Nihon Maicom Kaihatsu (NMK)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.BulletproofSoftware">
            <summary>
            BulletProof Software (BPS)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.VicTokai">
            <summary>
            VIC Tokai
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Sanritsu">
            <summary>
            Sanritsu
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.CharacterSoft">
            <summary>
            Character Soft
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.IMax">
            <summary>
            I'Max
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Toaplan">
            <summary>
            Toaplan
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Varie">
            <summary>
            Varie
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.YonezawaPartyRoom21SPal">
            <summary>
            Yonezawa Party Room 21 / S'Pal
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.PackINVideo">
            <summary>
            Pack-In-Video
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.NihonBussan">
            <summary>
            Nihon Bussan
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Tecmo">
            <summary>
            Tecmo
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Imagineer">
            <summary>
            Imagineer
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Face">
            <summary>
            Face
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.ScorpionSoft">
            <summary>
            Scorpion Soft
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Broderbund">
            <summary>
            Broderbund
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Konami">
            <summary>
            Konami
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.KAmusementLeasingCO">
            <summary>
            K. Amusement Leasing Co. (KAC)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.KawadaCOLtd">
            <summary>
            Kawada Co., Ltd.
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Takara">
            <summary>
            Takara
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.RoyalIndustries">
            <summary>
            Royal Industries
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Tecnos">
            <summary>
            Tecnos
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.VictorMusicalIndustries">
            <summary>
            Victor Musical Industries
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.HIScoreMediaWork">
            <summary>
            Hi-Score Media Work
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.ToeiAnimation">
            <summary>
            Toei Animation
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.TohoJap">
            <summary>
            Toho (Japan)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Tss">
            <summary>
            TSS
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Namco">
            <summary>
            Namco
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.AcclaimJap">
            <summary>
            Acclaim (Japan)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.AsciiCorporationNexoft">
            <summary>
            ASCII Corporation / Nexoft
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Bandai">
            <summary>
            Bandai
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.SoftProInc">
            <summary>
            Soft Pro Inc.
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Enix">
            <summary>
            Enix
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.DBSoft">
            <summary>
            dB-SOFT
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.HalLaboratory">
            <summary>
            HAL Laboratory
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Snk">
            <summary>
            SNK
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.PonyCanyon">
            <summary>
            Pony Canyon
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.CultureBrain">
            <summary>
            Culture Brain
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Sunsoft">
            <summary>
            Sunsoft
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.ToshibaEmi">
            <summary>
            Toshiba EMI
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.CbsSonyGroup">
            <summary>
            CBS/Sony Group
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.SammyCorporation">
            <summary>
            Sammy Corporation
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Taito">
            <summary>
            Taito
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.SunsoftAskCOLtd">
            <summary>
            Sunsoft / Ask Co., Ltd.
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Kemco">
            <summary>
            Kemco
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.SquareDiskOriginalGroup">
            <summary>
            Square / Disk Original Group (DOG)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.TokumaShoten">
            <summary>
            Tokuma Shoten
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.DataEast">
            <summary>
            Data East
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.TonkinHouseTokyoShoseki">
            <summary>
            Tonkin House / Tokyo Shoseki
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.EastCubeTohoNA">
            <summary>
            East Cube / Toho (NA)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Koei">
            <summary>
            Koei
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Upl">
            <summary>
            UPL
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.KonamiUltraPalcom">
            <summary>
            Konami / Ultra / Palcom
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.NtvicVap">
            <summary>
            NTVIC / VAP
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.UseCOLtd">
            <summary>
            Use Co., Ltd.
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Meldac">
            <summary>
            Meldac
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.PonyCanyonFci">
            <summary>
            Pony Canyon / FCI
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Angel">
            <summary>
            Angel
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Disco">
            <summary>
            Disco
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Sofel">
            <summary>
            Sofel
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.BothtecIncQuest">
            <summary>
            Bothtec, Inc. / Quest
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.SigmaEnterprises">
            <summary>
            Sigma Enterprises
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.AskCorp">
            <summary>
            Ask Corp.
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.KyugoTradingCO">
            <summary>
            Kyugo Trading Co.
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.NaxatSoftKagaTech">
            <summary>
            Naxat Soft / Kaga Tech
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Banpresto">
            <summary>
            Banpresto
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Tomy">
            <summary>
            Tomy
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.HiroCOLtd">
            <summary>
            Hiro Co., Ltd.
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.NipponComputerSystemsMasayaGames">
            <summary>
            Nippon Computer Systems (NCS) / Masaya Games
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.HumanCreative">
            <summary>
            Human Creative
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Altron">
            <summary>
            Altron
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.KKDce">
            <summary>
            K.K. DCE
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.TowaChiki">
            <summary>
            Towa Chiki
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Yutaka">
            <summary>
            Yutaka
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.KakenCorporation">
            <summary>
            Kaken Corporation
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Epoch">
            <summary>
            Epoch
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Athena">
            <summary>
            Athena
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Asmik">
            <summary>
            Asmik
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Natsume">
            <summary>
            Natsume
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.KingRecords">
            <summary>
            King Records
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Atlus">
            <summary>
            Atlus
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.SonyMusicEntertainment">
            <summary>
            Sony Music Entertainment
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.PixelCorporation">
            <summary>
            Pixel Corporation
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.InformationGlobalService">
            <summary>
            Information Global Service (IGS)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.Fujimic">
            <summary>
            Fujimic
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Company.AWave">
            <summary>
            A-Wave
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskTypesOther">
            <summary>
            Disk type (other)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskTypesOther.YellowDisk">
            <summary>
            Yellow disk
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskTypesOther.PrototypeSample">
            <summary>
            Prototype, sample, or internal-use (white or pink) disk
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskTypesOther.BlueDisk">
            <summary>
            Blue disk
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.ValidTypeID">
            <summary>
            Valid block type ID
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.IsValid">
            <summary>
            True if block type ID is valid
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskVerification">
            <summary>
            Literal ASCII string: *NINTENDO-HVC*
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.LicenseeCode">
            <summary>
            Manufacturer code. 0x00 = Unlicensed, 0x01 = Nintendo
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.GameName">
            <summary>
            3-letter ASCII code per game (e.g. ZEL for The Legend of Zelda)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.GameType">
            <summary>
            0x20 = " " — Normal disk
            0x45 = "E" — Event(e.g.Japanese national DiskFax tournaments)
            0x52 = "R" — Reduction in price via advertising
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.GameVersion">
            <summary>
            Game version/revision number. Starts at $00, increments per revision
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskSide">
            <summary>
            Side number. Single-sided disks use A
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskNumber">
            <summary>
            Disk number. First disk is $00, second is $01, etc.
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskType">
            <summary>
            Disk type. 0x00 = FMC ("normal card"), 0x01 = FSC ("card with shutter"). May correlate with FMC and FSC product codes
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown01">
            <summary>
            Unknown, offset 0x18.
            Always 0x00
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.BootFile">
            <summary>
            Boot read file code. Refers to the file code/file number to load upon boot/start-up
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown02">
            <summary>
            Unknown, offset 0x1A. 
            Always 0xFF
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown03">
            <summary>
            Unknown, offset 0x1B.
            Always 0xFF
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown04">
            <summary>
            Unknown, offset 0x1C.
            Always 0xFF
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown05">
            <summary>
            Unknown, offset 0x1D.
            Always 0xFF
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown06">
            <summary>
            Unknown, offset 0x1E. 
            Always 0xFF
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.ManufacturingDate">
            <summary>
            Manufacturing date
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.CountryCode">
            <summary>
            Country code. 0x49 = Japan
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown07">
            <summary>
            Unknown, offset 0x23. 
            Always 0x61.
            Speculative: Region code?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown08">
            <summary>
            Unknown, offset 0x24. 
            Always 0x00.
            Speculative: Location/site?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown09">
            <summary>
            Unknown, offset 0x25.
            Always 0x00
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown10">
            <summary>
            Unknown, offset 0x26. 
            Always 0x02
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown11">
            <summary>
            Unknown, offset 0x27. Speculative: some kind of game information representation?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown12">
            <summary>
            Unknown, offset 0x28. Speculative: some kind of game information representation?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown13">
            <summary>
            Unknown, offset 0x29. Speculative: some kind of game information representation?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown14">
            <summary>
            Unknown, offset 0x2A. Speculative: some kind of game information representation?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown15">
            <summary>
            Unknown, offset 0x2B. Speculative: some kind of game information representation?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.RewrittenDate">
            <summary>
            "Rewritten disk" date. It's speculated this refers to the date the disk was formatted and rewritten by something like a Disk Writer kiosk.
            In the case of an original (non-copied) disk, this should be the same as Manufacturing date
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown16">
            <summary>
            Unknown, offset 0x2F
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown17">
            <summary>
            Unknown, offset 0x30. 
            Always 0x80
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskWriterSerialNumber">
            <summary>
            Disk Writer serial number
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Unknown18">
            <summary>
            Unknown, offset 0x33, unknown. 
            Always 0x07
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskRewriteCount">
            <summary>
            Disk rewrite count. 
            0x00 = Original (no copies)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.ActualDiskSide">
            <summary>
            Actual disk side
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskTypeOther">
            <summary>
            Disk type (other)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Price">
            <summary>
            Price code (deprecated, no backing)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.DiskVersion">
            <summary>
            Unknown how this differs from GameVersion. Disk version numbers indicate different software revisions. 
            Speculation is that disk version incremented with each disk received from a licensee
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Length">
            <summary>
            Length of the block
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.FromBytes(System.Byte[],System.Int32)">
            <summary>
            Create FdsBlockDiskInfo object from raw data
            </summary>
            <param name="data">Data</param>
            <param name="offset">Data offset</param>
            <returns>FdsBlockDiskInfo object</returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.ToBytes">
            <summary>
            Returns raw data
            </summary>
            <returns>Data</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.ToString">
            <summary>
            String representation
            </summary>
            <returns>Game name</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockDiskInfo.Equals(com.clusterrr.Famicom.Containers.FdsBlockDiskInfo)">
            <summary>
            Equality comparer
            </summary>
            <param name="other">Other FdsBlockDiskInfo object</param>
            <returns>True if objects are equal</returns>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsBlockFileAmount">
            <summary>
            File amount FDS block (block type 2)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileAmount.ValidTypeID">
            <summary>
            Valid block type ID
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileAmount.IsValid">
            <summary>
            True if block type ID is valid
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileAmount.FileAmount">
            <summary>
            Amount of files
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileAmount.Length">
            <summary>
            Length of the block
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockFileAmount.FromBytes(System.Byte[],System.Int32)">
            <summary>
            Create FdsBlockFileAmount object from raw data
            </summary>
            <param name="data">Data</param>
            <param name="offset">Data offset</param>
            <returns>FdsBlockFileAmount object</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockFileAmount.ToBytes">
            <summary>
            Returns raw data
            </summary>
            <returns>Data</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockFileAmount.ToString">
            <summary>
            String representation
            </summary>
            <returns>File amount as string</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockFileAmount.Equals(com.clusterrr.Famicom.Containers.FdsBlockFileAmount)">
            <summary>
            Equality comparer
            </summary>
            <param name="other">Other FdsBlockFileAmount object</param>
            <returns>True if objects are equal</returns>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsBlockFileData">
            <summary>
            File data FDS block (block type 4)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileData.ValidTypeID">
            <summary>
            Valid block type ID
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileData.IsValid">
            <summary>
            True if block type ID is valid
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileData.Data">
            <summary>
            File data
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileData.Length">
            <summary>
            Length of the block
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockFileData.FromBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Create FdsBlockFileData object from raw data
            </summary>
            <param name="data">Data</param>
            <param name="offset">Offset</param>
            <param name="length">Length</param>
            <returns>FdsBlockFileData object</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockFileData.ToBytes">
            <summary>
            Returns raw data
            </summary>
            <returns>Data</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockFileData.ToString">
            <summary>
            String representation
            </summary>
            <returns>Number of bytes as string</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockFileData.Equals(com.clusterrr.Famicom.Containers.FdsBlockFileData)">
            <summary>
            Equality comparer
            </summary>
            <param name="other">Other FdsBlockFileData object</param>
            <returns>True if objects are equal</returns>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsBlockFileHeader">
            <summary>
            File header FDS block (block type 3)
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.Kind">
            <summary>
            Kind of the file
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.Kind.Program">
            <summary>
            PRG data
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.Kind.Character">
            <summary>
            CHR data
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.Kind.NameTable">
            <summary>
            Nametable data
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.ValidTypeID">
            <summary>
            Valid block type ID
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.IsValid">
            <summary>
            True if block type ID is valid
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.FileNumber">
            <summary>
            File number
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.FileIndicateCode">
            <summary>
            File indicate code (ID specified at disk-read function call)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.FileName">
            <summary>
            Filename
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.FileAddress">
            <summary>
            File address - the destination address when loading
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.FileSize">
            <summary>
            File size
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.FileKind">
            <summary>
            Kind of the file: program, character or nametable
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.Length">
            <summary>
            Length of the block
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.FromBytes(System.Byte[],System.Int32)">
            <summary>
            Create FdsBlockFileHeader object from raw data
            </summary>
            <param name="data">Data</param>
            <param name="offset">Offset</param>
            <returns></returns>
            <exception cref="T:System.IO.InvalidDataException"></exception>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.ToBytes">
            <summary>
            Returns raw data
            </summary>
            <returns>Data</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.ToString">
            <summary>
            String representation
            </summary>
            <returns>File name and file kind as string</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsBlockFileHeader.Equals(com.clusterrr.Famicom.Containers.FdsBlockFileHeader)">
            <summary>
            Equality comparer
            </summary>
            <param name="other">Other FdsBlockFileHeader object</param>
            <returns>True if objects are equal</returns>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsDiskFile">
            <summary>
            File on FDS disk - header and data
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskFile.HeaderBlock">
            <summary>
            FDS block with file header
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskFile.DataBlock">
            <summary>
            FDS block with file contents
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskFile.FileNumber">
            <summary>
            File number
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskFile.FileIndicateCode">
            <summary>
            File indicate code (ID specified at disk-read function call)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskFile.FileName">
            <summary>
            Filename
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskFile.FileAddress">
            <summary>
            File address - the destination address when loading
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskFile.FileSize">
            <summary>
            File size
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskFile.FileKind">
            <summary>
            Kind of the file: program, character or nametable
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskFile.Data">
            <summary>
            File contents
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskFile.#ctor(com.clusterrr.Famicom.Containers.FdsBlockFileHeader,com.clusterrr.Famicom.Containers.FdsBlockFileData)">
            <summary>
            Construcor
            </summary>
            <param name="headerBlock">File header block</param>
            <param name="dataBlock">File data block</param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskFile.#ctor">
            <summary>
            Construcor for empty FdsDiskFile object
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskFile.ToBytes">
            <summary>
            Returns raw file contents
            </summary>
            <returns>Raw file contents</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskFile.ToString">
            <summary>
            String representation: filename, file kind, data block info
            </summary>
            <returns>String representation of the file</returns>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsDiskSide">
            <summary>
            Single FDS disk side: disk info block, file amount block and file blocks
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.DiskVerification">
            <summary>
            Literal ASCII string: *NINTENDO-HVC*
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.LicenseeCode">
            <summary>
            Manufacturer code. 0x00 = Unlicensed, 0x01 = Nintendo
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.GameName">
            <summary>
            3-letter ASCII code per game (e.g. ZEL for The Legend of Zelda)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.GameType">
            <summary>
            0x20 = " " — Normal disk
            0x45 = "E" — Event(e.g.Japanese national DiskFax tournaments)
            0x52 = "R" — Reduction in price via advertising
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.GameVersion">
            <summary>
            Game version/revision number. Starts at $00, increments per revision
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.DiskSide">
            <summary>
            Side number. Single-sided disks use A
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.DiskNumber">
            <summary>
            Disk number. First disk is $00, second is $01, etc.
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.DiskType">
            <summary>
            Disk type. 0x00 = FMC ("normal card"), 0x01 = FSC ("card with shutter"). May correlate with FMC and FSC product codes
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown01">
            <summary>
            Unknown, offset 0x18.
            Always 0x00
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.BootFile">
            <summary>
            Boot read file code. Refers to the file code/file number to load upon boot/start-up
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown02">
            <summary>
            Unknown, offset 0x1A. 
            Always 0xFF
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown03">
            <summary>
            Unknown, offset 0x1B.
            Always 0xFF
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown04">
            <summary>
            Unknown, offset 0x1C.
            Always 0xFF
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown05">
            <summary>
            Unknown, offset 0x1D.
            Always 0xFF
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown06">
            <summary>
            Unknown, offset 0x1E. 
            Always 0xFF
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.ManufacturingDate">
            <summary>
            Manufacturing date
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.CountryCode">
            <summary>
            Country code. 0x49 = Japan
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown07">
            <summary>
            Unknown, offset 0x23. 
            Always 0x61.
            Speculative: Region code?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown08">
            <summary>
            Unknown, offset 0x24. 
            Always 0x00.
            Speculative: Location/site?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown09">
            <summary>
            Unknown, offset 0x25.
            Always 0x00
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown10">
            <summary>
            Unknown, offset 0x26. 
            Always 0x02
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown11">
            <summary>
            Unknown, offset 0x27. Speculative: some kind of game information representation?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown12">
            <summary>
            Unknown, offset 0x28. Speculative: some kind of game information representation?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown13">
            <summary>
            Unknown, offset 0x29. Speculative: some kind of game information representation?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown14">
            <summary>
            Unknown, offset 0x2A. Speculative: some kind of game information representation?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown15">
            <summary>
            Unknown, offset 0x2B. Speculative: some kind of game information representation?
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.RewrittenDate">
            <summary>
            "Rewritten disk" date. It's speculated this refers to the date the disk was formatted and rewritten by something like a Disk Writer kiosk.
            In the case of an original (non-copied) disk, this should be the same as Manufacturing date
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown16">
            <summary>
            Unknown, offset 0x2F
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown17">
            <summary>
            Unknown, offset 0x30. 
            Always 0x80
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.DiskWriterSerialNumber">
            <summary>
            Disk Writer serial number
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Unknown18">
            <summary>
            Unknown, offset 0x33, unknown. 
            Always 0x07
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.DiskRewriteCount">
            <summary>
            Disk rewrite count. 
            0x00 = Original (no copies)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.ActualDiskSide">
            <summary>
            Actual disk side
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.DiskTypeOther">
            <summary>
            Disk type (other)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Price">
            <summary>
            Price code (deprecated, no backing)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.DiskVersion">
            <summary>
            Unknown how this differs from GameVersion. Disk version numbers indicate different software revisions. 
            Speculation is that disk version incremented with each disk received from a licensee
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.FileAmount">
            <summary>
            Non-hidden file amount
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsDiskSide.Files">
            <summary>
            Files on disk
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskSide.#ctor">
            <summary>
            Constructor to create empty FdsDiskSide object
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskSide.#ctor(com.clusterrr.Famicom.Containers.FdsBlockDiskInfo,com.clusterrr.Famicom.Containers.FdsBlockFileAmount,System.Collections.Generic.IEnumerable{com.clusterrr.Famicom.Containers.FdsDiskFile})">
            <summary>
            Constructor to create FdsDiskSide object from blocks and files
            </summary>
            <param name="diskInfoBlock">Disk info block</param>
            <param name="fileAmountBlock">File amount block</param>
            <param name="files">Files</param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskSide.#ctor(System.Collections.Generic.IEnumerable{com.clusterrr.Famicom.Containers.IFdsBlock})">
            <summary>
            Constructor to create FdsDiskSide object from blocks
            </summary>
            <param name="blocks"></param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskSide.#ctor(System.Byte[])">
            <summary>
            Constructor to create FdsDiskSide object from raw data
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskSide.FixFileNumbers">
            <summary>
            Change file's "file number" fields orderly
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskSide.GetBlocks">
            <summary>
            Get FDS blocks
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskSide.FromBytes(System.Byte[])">
            <summary>
            Create FdsDiskSide object from raw data
            </summary>
            <param name="data">Data</param>
            <returns>FdsDiskSide object</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskSide.ToBytes">
            <summary>
            Return raw data
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsDiskSide.ToString">
            <summary>
            String representation
            </summary>
            <returns>Game name, disk number, side number as string</returns>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.FdsFile">
            <summary>
            File container for FDS games, disk sides collection
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.FdsFile.Sides">
            <summary>
            Disk Side Images
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsFile.#ctor">
            <summary>
            Constructor to create empty FdsFile object
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsFile.#ctor(System.String)">
            <summary>
            Create FdsFile object from the specified .nes file 
            </summary>
            <param name="filename">Path to the .fds file</param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsFile.#ctor(System.Byte[])">
            <summary>
            Create FdsFile object from raw .fds file data
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsFile.#ctor(System.Collections.Generic.IEnumerable{com.clusterrr.Famicom.Containers.FdsDiskSide})">
            <summary>
            Create FdsFile object from set of FdsDiskSide objects 
            </summary>
            <param name="sides"></param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsFile.FromBytes(System.Byte[])">
            <summary>
            Create FdsFile object from raw .fds file contents
            </summary>
            <param name="data"></param>
            <returns>FdsFile object</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsFile.FromFile(System.String)">
            <summary>
            Create FileFile object from the specified .nes file 
            </summary>
            <param name="filename">Path to the .fds file</param>
            <returns>FdsFile object</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsFile.ToBytes(System.Boolean)">
            <summary>
            Returns .fds file contents
            </summary>
            <param name="useHeader">Option to add .fds file header (ignored by most emulators)</param>
            <returns>FDS file contents</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.FdsFile.Save(System.String,System.Boolean)">
            <summary>
            Save as .fds file
            </summary>
            <param name="filename">Target filename</param>
            <param name="useHeader">Option to add .fds file header (ignored by most emulators)</param>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.IFdsBlock">
            <summary>
            FDS block interface
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.IFdsBlock.ValidTypeID">
            <summary>
            Returns the valid block type ID
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.IFdsBlock.IsValid">
            <summary>
            Returns true if the block type ID is valid
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.IFdsBlock.Length">
            <summary>
            Length of raw block data
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.IFdsBlock.ToBytes">
            <summary>
            Return raw data
            </summary>
            <returns></returns>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.MirroringType">
            <summary>
            What CIRAM A10 is connected to
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.MirroringType.Horizontal">
            <summary>
            PPU A11 (horizontal mirroring)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.MirroringType.Vertical">
            <summary>
            PPU A10 (vertical mirroring)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.MirroringType.OneScreenA">
            <summary>
            Ground (one-screen A)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.MirroringType.OneScreenB">
            <summary>
            Vcc (one-screen B)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.MirroringType.FourScreenVram">
            <summary>
            Extra memory has been added (four-screen)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.MirroringType.MapperControlled">
            <summary>
            Mapper controlled
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.MirroringType.Unknown">
            <summary>
            Unknown value
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.NesFile">
            <summary>
            iNES / NES 2.0 file container for NES/Famicom games
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.PRG">
            <summary>
            PRG data
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.CHR">
            <summary>
            CHR data
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.Trainer">
            <summary>
            Trainer
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.MiscellaneousROM">
            <summary>
            Miscellaneous ROM (NES 2.0 only)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.Mapper">
            <summary>
            Mapper number
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.Submapper">
            <summary>
            Submapper number (NES 2.0 only)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.Battery">
            <summary>
            Battery-backed (or other non-volatile memory) memory is present
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.Version">
            <summary>
            Version of .nes file format: iNES or NES 2.0
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.PrgRamSize">
            <summary>
            PRG RAM Size (NES 2.0 only)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.PrgNvRamSize">
            <summary>
            PRG NVRAM Size (NES 2.0 only)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.ChrRamSize">
            <summary>
            CHR RAM Size (NES 2.0 only)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.ChrNvRamSize">
            <summary>
            CHR NVRAM Size (NES 2.0 only)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.Mirroring">
            <summary>
            Mirroring type
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.Region">
            <summary>
            For non-homebrew NES/Famicom games, this field's value is always a function of the region in which a game was released (NES 2.0 only)
            </summary>        
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.Console">
            <summary>
            Console type (NES 2.0 only)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.VsPpu">
            <summary>
            Vs. System PPU type (used when Console is ConsoleType.VsSystem)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.VsHardware">
            <summary>
            Vs. System hardware type (used when Console is ConsoleType.VsSystem)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsole">
            <summary>
            Extended console type (used when Console is ConsoleType.Extended)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.DefaultExpansionDevice">
            <summary>
            Default expansion device (NES 2.0 only)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.NesFile.MiscellaneousROMsCount">
            <summary>
            Miscellaneous ROMs сount (NES 2.0 only)
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.NesFile.iNesVersion">
            <summary>
            Version of iNES format
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.iNesVersion.iNES">
            <summary>
            Classic iNES format
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.iNesVersion.NES20">
            <summary>
            NES 2.0 format
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.NesFile.ConsoleType">
            <summary>
            Console type
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ConsoleType.Normal">
            <summary>
            Nintendo Entertainment System/Family Computer
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ConsoleType.VsSystem">
            <summary>
            Nintendo Vs. System
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ConsoleType.Playchoice10">
            <summary>
            Nintendo Playchoice 10
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ConsoleType.Extended">
            <summary>
            Extended Console Type
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.NesFile.VsPpuType">
            <summary>
            Vs. System PPU type
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RP2C03B">
            <summary>
            RP2C03B
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RP2C03G">
            <summary>
            RP2C03G
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RP2C04_0001">
            <summary>
            RP2C04-0001
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RP2C04_0002">
            <summary>
            RP2C04-0002
            </summary>            
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RP2C04_0003">
            <summary>
            RP2C04-0003
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RP2C04_0004">
            <summary>
            RP2C04-0004
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RC2C03B">
            <summary>
            RC2C03B
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RC2C03C">
            <summary>
            RC2C03C
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RC2C05_01">
            <summary>
            RC2C05-01 ($2002 AND $?? =$1B)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RC2C05_02">
            <summary>
            RC2C05-02 ($2002 AND $3F =$3D)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RC2C05_03">
            <summary>
            RC2C05-03 ($2002 AND $1F =$1C)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RC2C05_04">
            <summary>
            RC2C05-04 ($2002 AND $1F =$1B)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsPpuType.RC2C05_05">
            <summary>
            RC2C05-05 ($2002 AND $1F =unknown)
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.NesFile.VsHardwareType">
            <summary>
            Vs. System hardware type
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsHardwareType.VsUnisystemNormal">
            <summary>
            Vs. Unisystem (normal)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsHardwareType.VsUnisystemRBIBaseballProtection">
            <summary>
            Vs. Unisystem (RBI Baseball protection)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsHardwareType.VsUnisystemTKOBoxingProtection">
            <summary>
            Vs. Unisystem (TKO Boxing protection)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsHardwareType.VsUnisystemSuperXeviousProtection">
            <summary>
            Vs. Unisystem (Super Xevious protection)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsHardwareType.VsUnisystemVsIceClimberJapanProtection">
            <summary>
            Vs. Unisystem (Vs. Ice Climber Japan protection)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsHardwareType.VsDualSystemNormal">
            <summary>
            Vs. Dual System (normal)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.VsHardwareType.VsDualSystemRaidOnBungelingBayProtection">
            <summary>
            Vs. Dual System (Raid on Bungeling Bay protection)
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType">
            <summary>
            Extended console type
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType.RegularNES">
            <summary>
            Regular NES/Famicom/Dendy
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType.NintendoVsSystem">
            <summary>
            Nintendo Vs. System
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType.Playchoice10">
            <summary>
            Playchoice 10
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType.FamicloneWithDecimalMode">
            <summary>
            Regular Famiclone, but with CPU that supports Decimal Mode (e.g. Bit Corporation Creator)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType.VRTechnologyVT01Monochrome">
            <summary>
            V.R. Technology VT01 with monochrome palette
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType.VRTechnologyVT01WithRedCyanSTNPalette">
            <summary>
            V.R. Technology VT01 with red/cyan STN palette
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType.VRTechnologyVT02">
            <summary>
            V.R. Technology VT02
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType.VRTechnologyVT03">
            <summary>
            V.R. Technology VT03
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType.VRTechnologyVT09">
            <summary>
            V.R. Technology VT09
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType.VRTechnologyVT32">
            <summary>
            V.R. Technology VT32
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType.VRTechnologyVT369">
            <summary>
            V.R. Technology VT369
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExtendedConsoleType.UMC_UM6578">
            <summary>
            UMC UM6578
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice">
            <summary>
            Type of expansion device connected to console, source: https://www.nesdev.org/wiki/NES_2.0#Default_Expansion_Device
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.Unspecified">
            <summary>
            Expansion device is not specified
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.Standard">
            <summary>
            Standard NES/Famicom controllers
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.NesFourScore">
            <summary>
            NES Four Score/Satellite with two additional standard controllers
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.FamicomFourPlayersAdapter">
            <summary>
            Famicom Four Players Adapter with two additional standard controllers
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.VsSystem">
            <summary>
            Vs. System
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.VsSystemWithReversedInputs">
            <summary>
            Vs. System with reversed inputs
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.VsPinball">
            <summary>
            Vs. Pinball (Japan)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.VsZapper">
            <summary>
            Vs. Zapper
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.Zapper">
            <summary>
            Zapper ($4017)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.TwoZappers">
            <summary>
            Two Zappers
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.BandaiHyperShotLightgun">
            <summary>
            Bandai Hyper Shot Lightgun
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.PowerPadSideA">
            <summary>
            Power Pad Side A
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.PowerPadSideB">
            <summary>
            Power Pad Side B
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.FamilyTrainerSideA">
            <summary>
            Family Trainer Side A
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.FamilyTrainerSideB">
            <summary>
            Family Trainer Side B
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.ArkanoidVausControllerNES">
            <summary>
            Arkanoid Vaus Controller (NES)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.ArkanoidVausControllerFamicom">
            <summary>
            Arkanoid Vaus Controller (Famicom)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.TwoVausControllersPlusFamicomDataRecorder">
            <summary>
            Two Vaus Controllers plus Famicom Data Recorder
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.KonamiHyperShotController">
            <summary>
            Konami Hyper Shot Controller
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.CoconutsPachinkoController">
            <summary>
            Coconuts Pachinko Controller
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.ExcitingBoxingPunchingBag">
            <summary>
            Exciting Boxing Punching Bag (Blowup Doll)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.JissenMahjongController">
            <summary>
            Jissen Mahjong Controller
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.PartyTap">
            <summary>
            Party Tap
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.OekaKidsTablet">
            <summary>
            Oeka Kids Tablet
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.SunsoftBarcodeBattler">
            <summary>
            Sunsoft Barcode Battler
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.MiraclePianoKeyboard">
            <summary>
            Miracle Piano Keyboard
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.PokkunMoguraa">
            <summary>
            Pokkun Moguraa (Whack-a-Mole Mat and Mallet)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.TopRider">
            <summary>
            Top Rider(Inflatable Bicycle)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.DoubleFisted">
            <summary>
            Double-Fisted (Requires or allows use of two controllers by one player)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.Famicom3DSystem">
            <summary>
            Famicom 3D System
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.DoremikkoKeyboard">
            <summary>
            Doremikko Keyboard
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.RobGyroSet">
            <summary>
            R.O.B. Gyro Set
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.FamicomDataRecorder">
            <summary>
            Famicom Data Recorder (don't emulate keyboard)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.ASCIITurboFile">
            <summary>
            ASCII Turbo File
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.IGSStorageBattleBox">
            <summary>
            IGS Storage Battle Box
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.FamilyBasicKeyboardPlusFamicomDataRecorder">
            <summary>
            Family BASIC Keyboard plus Famicom Data Recorder
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.DongdaPEC586Keyboard">
            <summary>
            Dongda PEC-586 Keyboard
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.BitCorpBit79Keyboard">
            <summary>
            Bit Corp. Bit-79 Keyboard
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.SuborKeyboard">
            <summary>
            Subor Keyboard
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.SuborKeyboardPlusMouse3x8">
            <summary>
            Subor Keyboard plus mouse (3x8-bit protocol)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.SuborKeyboardPlusMouse24">
            <summary>
            Subor Keyboard plus mouse (24-bit protocol)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.SnesMouse4017">
            <summary>
            SNES Mouse ($4017.d0)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.Multicart">
            <summary>
            Multicart
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.TwoSnesControllers">
            <summary>
            Two SNES controllers replacing the two standard NES controllers
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.RacerMateBicycle">
            <summary>
            RacerMate Bicycle
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.UForce">
            <summary>
            U-Force
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.RobStackUp">
            <summary>
            R.O.B. Stack-Up
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.CityPatrolmanLightgun">
            <summary>
            City Patrolman Lightgun
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.SharpC1CassetteInterface">
            <summary>
            Sharp C1 Cassette Interface
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.StandardControllerWithSwapped">
            <summary>
            Standard Controller with swapped Left-Right/Up-Down/B-A
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.ExcaliborSudokuPad">
            <summary>
            Excalibor Sudoku Pad
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.AblPinball">
            <summary>
            ABL Pinball
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.NesFile.ExpansionDevice.GoldenNuggetCasinoExtraButtons">
            <summary>
            Golden Nugget Casino extra buttons
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.NesFile.#ctor">
            <summary>
            Constructor to create empty NesFile object
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.NesFile.#ctor(System.Byte[])">
            <summary>
            Create NesFile object from raw .nes file contents
            </summary>
            <param name="data">Raw .nes file data</param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.NesFile.#ctor(System.String)">
            <summary>
            Create NesFile object from the specified .nes file 
            </summary>
            <param name="fileName">Path to the .nes file</param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.NesFile.FromBytes(System.Byte[])">
            <summary>
            Create NesFile object from raw .nes file contents
            </summary>
            <param name="data">Raw ROM data</param>
            <returns>NesFile object</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.NesFile.FromFile(System.String)">
            <summary>
            Create NesFile object from the specified .nes file 
            </summary>
            <param name="filename">Path to the .nes file</param>
            <returns>NesFile object</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.NesFile.ToBytes">
            <summary>
            Returns .nes file contents (header + PRG + CHR)
            </summary>
            <returns>.nes file contents</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.NesFile.Save(System.String)">
            <summary>
            Save as .nes file
            </summary>
            <param name="filename">Target filename</param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.NesFile.CalculateMD5">
            <summary>
            Calculate MD5 checksum of ROM (CHR+PRG without header)
            </summary>
            <returns>MD5 checksum for all PRG and CHR data</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.NesFile.CalculateCRC32">
            <summary>
            Calculate CRC32 checksum of ROM (CHR+PRG without header)
            </summary>
            <returns>CRC32 checksum for all PRG and CHR data</returns>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.Timing">
            <summary>
            Timing type, depends on region
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.Timing.Ntsc">
            <summary>
            NTSC, RP2C02, North America, Japan, South Korea, Taiwan
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.Timing.Pal">
            <summary>
            PAL, RP2C07, Western Europe, Australia
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.Timing.Multiple">
            <summary>
            Used either if a game was released with identical ROM content in both NTSC and PAL countries, such as Nintendo's early games, or if the game detects the console's timing and adjusts itself
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.Timing.Dendy">
            <summary>
            Dendy, UMC 6527P and clones, Eastern Europe, Russia, Mainland China, India, Africa
            </summary>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.UnifFile">
            <summary>
            UNIF file container for NES/Famicom games
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.UnifFile.fields">
            <summary>
            UNIF fields
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.Version">
            <summary>
            UNIF version
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.Item(System.String)">
            <summary>
            Get/set UNIF field
            </summary>
            <param name="key">UNIF data block key</param>
            <returns></returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.ContainsField(System.String)">
            <summary>
            Returns true if field exists in the UNIF
            </summary>
            <param name="fieldName">Field code</param>
            <returns>True if field exists in the UNIF</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.RemoveField(System.String)">
            <summary>
            Remove field from the UNIF
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.GetEnumerator">
            <summary>
            Returns enumerator that iterates throught fields
            </summary>
            <returns>IEnumerable object</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.#ctor">
            <summary>
            Constructor to create empty UnifFile object
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.#ctor(System.Byte[])">
            <summary>
            Create UnifFile object from raw .unf file contents
            </summary>
            <param name="data">Raw UNIF data</param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.#ctor(System.String)">
            <summary>
            Create UnifFile object from specified file
            </summary>
            <param name="fileName">Path to the .unf file</param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.FromBytes(System.Byte[])">
            <summary>
            Create UnifFile object from raw .unf file contents
            </summary>
            <param name="data"></param>
            <returns>UnifFile object</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.FromFile(System.String)">
            <summary>
            Create UnifFile object from specified file
            </summary>
            <param name="filename">Path to the .unf file</param>
            <returns>UnifFile object</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.ToBytes">
            <summary>
            Returns .unf file contents
            </summary>
            <returns></returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.Save(System.String)">
            <summary>
            Save as .unf file
            </summary>
            <param name="filename">Target filename</param>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.StringToUTF8N(System.String)">
            <summary>
            Convert string to null-terminated UTF string
            </summary>
            <param name="text">Input text</param>
            <returns>Output byte[] array</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.UTF8NToString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Convert null-terminated UTF string to string
            </summary>
            <param name="data">Input array of bytes</param>
            <param name="maxLength">Maximum number of bytes to parse</param>
            <param name="offset">Start offset</param>
            <returns></returns>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.Mapper">
            <summary>
            Mapper name (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.DumperName">
            <summary>
            The dumper name (null if none)
            </summary>
            
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.DumpingSoftware">
            <summary>
            The name of the dumping software or mechanism (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.DumpDate">
            <summary>
            Date of the dump (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.GameName">
            <summary>
            Name of the game (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.Region">
            <summary>
            For non-homebrew NES/Famicom games, this field's value is always a function of the region in which a game was released (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.Controllers">
            <summary>
            Controllers usable by this game, bitmask (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.Battery">
            <summary>
            Battery-backed (or other non-volatile memory) memory is present (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.Mirroring">
            <summary>
            Mirroring type (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.PRG0">
            <summary>
            PRG0 field (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.PRG1">
            <summary>
            PRG1 field (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.PRG2">
            <summary>
            PRG2 field (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.PRG3">
            <summary>
            PRG3 field (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.CHR0">
            <summary>
            CHR0 field (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.CHR1">
            <summary>
            CHR1 field (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.CHR2">
            <summary>
            CHR2 field (null if none)
            </summary>
        </member>
        <member name="P:com.clusterrr.Famicom.Containers.UnifFile.CHR3">
            <summary>
            CHR3 field (null if none)
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.CalculateAndStoreCRCs">
            <summary>
            Calculate CRC32 for PRG and CHR fields and store it into PCKx and CCKx fields
            </summary>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.CalculateMD5">
            <summary>
            Calculate MD5 checksum of ROM (all PRG fields + all CHR fields)
            </summary>
            <returns>MD5 checksum for all PRG and CHR data</returns>
        </member>
        <member name="M:com.clusterrr.Famicom.Containers.UnifFile.CalculateCRC32">
            <summary>
            Calculate CRC32 checksum of ROM (all PRG fields + all CHR fields)
            </summary>
            <returns>CRC32 checksum for all PRG and CHR data</returns>
        </member>
        <member name="T:com.clusterrr.Famicom.Containers.UnifFile.Controller">
            <summary>
            Default game controller(s)
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.UnifFile.Controller.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.UnifFile.Controller.StandardController">
            <summary>
            Standatd Controller
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.UnifFile.Controller.Zapper">
            <summary>
            Zapper
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.UnifFile.Controller.ROB">
            <summary>
            R.O.B.
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.UnifFile.Controller.ArkanoidController">
            <summary>
            Arkanoid Controller
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.UnifFile.Controller.PowerPad">
            <summary>
            Power Pad
            </summary>
        </member>
        <member name="F:com.clusterrr.Famicom.Containers.UnifFile.Controller.FourScore">
            <summary>
            Four Score
            </summary>
        </member>
    </members>
</doc>
